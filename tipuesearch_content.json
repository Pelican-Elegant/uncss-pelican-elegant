{
    "pages": [
        {
            "text": "Elliott Hulse, a fitness coach, on the topic of\nbuilding muscles,\n\nYour muscles need to be stressed to a point where they are FORCED to grow\nbigger and stronger. Otherwise they will stay the same, seeing no need to\nwaste valuable energy on developing a bigger musculature. Something key to\nremember, for any physical goal, is that the body will always take the path of\nleast resistance. Put it in an environment where YOUR GOAL is the only\npossible\u00a0outcome.\n\nTo have big muscles you have to lift heavy weights. Heavier than what you can\nlift easily. If you won\u2019t push your body, it won\u2019t develop. Forcing your body to\ndo the impossible is the only way to make it\u00a0develop.\nWe all create a comfort zone around us. We build it, cherish it, come to rely on\nit, and then we lock ourselves in. This is true for software development\u00a0too.\nYou can never improve as a developer if you cage yourself in your comfort zone.\nYou may call your specific skills as your niche. You may proclaim that the your\nprogramming language is the best and most powerful language ever\u00a0created.\nFor what it\u2019s worth, fall in love with your platform and become its ardent\nworshipper. Your call! But you cannot improve this\u00a0way.\n\nCC\nimage\ncourtesy of\nPaul\u00a0Reynolds\nC was the first programming language I learned. After few months, I landed on my\nfirst job where I kept developing softwares in C. For a long time I didn\u2019t\nbother to learn how to use a debugger at all. My excuse was something along\nthese lines, \u201cI can debug all I want using log statements thrown all around the\u00a0code.\u201d\nThis was a good enough excuse for many. But I knew, deep down, the real reason\nwas that learning a command line debugger (GDB) scared\u00a0me.\nEach time I opened up a GDB tutorial, I would close the browser tab within few\nminutes. \u201cGosh! What is this? The lingo is so alien. What the heck writer is\nbabbling about? Argh! I will never get\u00a0it.\u201d\nI was afraid that I am facing something that I can never understand. \u201cI have\nreached my limits. Why add another item in my list of failures? Lets just drop\nit so that I don\u2019t have to feel so uncomfortable. My world is going just fine\nwithout\u00a0GDB.\u201d\nDon\u2019t do what I\u00a0did.\nThis approach may work for some time and in few cases. Unfortunately, this\nattitude becomes persistent and turns into a habit. It begins to reflect, not\nonly in your programming, but in every aspect of your\u00a0life.\nIn the same class where I learned C, several students gave up on C. Their\nexcuse, \u201cC is not widely used. We are more interested in learning Java or C#.\nThese will offer us better job\u00a0prospects.\u201d\nGuess what? They never came around to learn any of their favorite language.\nFirst they gave up on pointers, and then C. \nSame guys gave up on object-oriented programming introductory classes.\nWhen C# classes started they weren\u2019t ready for it at all.\nFinally they stopped programming\u00a0altogether.\nSome took up graphic designing course, and rest took up\nquality assurance. The attitude of shying away from difficult stripped\naway their\u00a0dreams.\nIf you want to improve, get out of your comfort zone. Pick something that\nchallenges\u00a0you.\nDo what you think you can never do in ten years, heck, in your life\u00a0time.\nDo whatever that makes you\u00a0uncomfortable.", 
            "tags": "Career Advice", 
            "loc": "http://oncrashreboot.com/career-advice-software-developers-fitness-coach", 
            "title": "A Fitness Coach and the Software&nbsp;Developers"
        }, 
        {
            "text": "\nElegant is a stylish, responsive, and minimal Pelican theme that looks amazing across all screen resolutions and\u00a0devices. \nElegant gives meaning to the expression \u201csand the under side of the drawer.\u201d Every feature and style of Elegant is the result of a long thought\u00a0process. \n\nGet Elegant 1.3\nLicense Agreement|Release Notes\n  Show your support. Leave a tip! \n\nWhat makes Elegant so\u00a0special? \nSearch\u00b6\nStatic sites usually do not offer search. Elegant uses Tipue Search- an open source jQuery plugin, to offer search for your static\u00a0site.\nThere are two search\u00a0modes.\n\nJSON Mode Your site pages will be stored in JSON at your server. Tipue Search will use AJAX to access it and render search result. You need Tipue Search plugin to use this\u00a0mode.\nLive Mode Search Tipue Search will fetch your site using Sitemap, index it and store it in the visitor\u2019s cache. This mode requires Sitemap plugin.\n\nUse JSON mode if you value speed, or have a large site, or don\u2019t want to overwhelm your host server for every search\u00a0query.\nHere is how the search result looks\u00a0like\n\nSearch box is part of main navigation menu so that visitor can search from any\u00a0page.\n\nLive Filter for Tags\u00b6\nElegant is a minimal theme. Instead of creating separate pages for each tag, Elegant shows all the tags on a single page. To help visitor find the tags he is interested in, Elegant offers live\u00a0filter. \nGo to tags page and type your required tag in \u201cFind a tag\u201d search box. Elegant will automatically filter the\u00a0list.\nFor example, this is how my tags page looks\u00a0like\n\nAs soon as I type \u201cos\u201d, all other tags are filtered\u00a0out\n\nWith live filter, your reader will have no difficulty in picking up his desired tag from the list, even if your site has hundreds of\u00a0tags.\nAll Categories but with zero clutter\u00b6\nPelican by default creates a separate page for each category. Themes list all the articles filed in that category at its page. Elegant takes a different\u00a0approach. \nIt lists all the categories and their articles on the same page. To reduce clutter and utilise space efficiently, each category and its list of articles in enclosed in collapsible accordions.\nHere is how categories appear\u00a0collapsed\n\nAnd this is how they appear\u00a0uncollapsed\n\nDid you notice that categories are listed in ascending alphabetical order and articles are sorted by their date in descending\u00a0order?\nHome Page Features\u00b6\nThis is the page that visitors see when they open your website. Your chance to make a good and lasting first impression. Most sites just display a list of recent posts. Elegant goes the extra mile. Check this\u00a0out\n\nYou can see two sections\u00a0here,\n\nAbout\u00a0me\nMy\u00a0Projects\n\nThere is a third section below these two sections, \u201cRecent\u00a0articles\u201d\n\nAbout me\u00b6\nYou can write up your own About me section using LANDING_PAGE_ABOUT variable in your configuration. It is a dictionary that has two keys title and details. Value of title is displayed in the header of the home page, like in the above example it is \u201cI design and build software products for iOS and OSX\u201d. details is the text that appears under \u201cAbout me\u201d\u00a0heading.\nProjects\u00b6\nProjects list is read from PROJECTS. It is an array of dictionaries. Each dictionary has three keys, name which will have name of your project, url which will have URL of the project, and description which will have the description of the project. You can define as many projects as you want. Here is an\u00a0example,\n1\n2\n3\n4\n5\n6\n7\n8\n9PROJECTS = [{\n    'name': 'Logpad + Duration',\n    'url': 'https://github.com/talha131/logpad-plus-duration#logpad--duration',\n    'description': 'Vim plugin to emulate Windows Notepad logging feature,'\n    ' and log duration of each entry'},\n    {'name': 'Elegant Theme for Pelican',\n    'url': 'http://oncrashreboot.com/pelican-elegant',\n    'description': 'A clean and distraction free theme, with search and a'\n    ' lot more unique features, using Jinja2 and Bootstrap'}]\n\n\nRecent Articles\u00b6\nRecent articles show last RECENT_ARTICLES_COUNT whose default value is 10. It also has a link to \u201call\u00a0posts\u201d.\nMailchimp\u00b6\nMailchimp has become the preferred newsletter service. Elegant shows a form to subscribe to your newsletter, above the fold, in the right section of every article. Increased visibility is said to increase number of\u00a0subscribers.\n\nYou need to put your Mailchimp form action URL in MAILCHIMP_FORM_ACTION in your configuration file. You can also define EMAIL_SUBSCRIPTION_LABEL, EMAIL_FIELD_PLACEHOLDER and SUBSCRIBE_BUTTON_TITLE to customize user\u00a0experience.\nCollapsible Comments\u00b6\nReaders use scroll bar to track their progress when reading inside their browsers. Very often comments take up more space than the actual article. When comments take up more space, it throws the scroll bar proportion off and reader cannot judge his progress correctly. Hacker News hosted a discussion on this\u00a0topic.\n\ntons of online articles list comments on the same page, so the scroll bar is almost a negative incentive to keep reading.\n\u201cI\u2019ve read this much of the article and I\u2019m only 1/20th of the way down?\u201d [user stops reading, unaware that there\u2019s 450 comments and the article is actually pretty\u00a0short]\n\nElegant keeps the comments section hidden by default. Reader can hide and unhide the section by clicking on the comments\u00a0section.\nThis is how comments section\u00a0appear\n\nIt expands when reader clicks on\u00a0it\n\nInvite Visitors to Comment\u00b6\nInstead of just throwing in comments\u2019 form at the end of every article, Elegant offers you a way to write introductory text that would appear before comments. Assign your message to COMMENTS_INTRO in your configuration\u00a0file.\nWrite whatever you think is appropriate to invite the visitor to comment. Be creative! You can even put a link to your twitter account or newsletter there. Here is what I have chosen to say to my\u00a0visitors.\n\nArticles Count with every Tag and Category\u00b6\nReaders of an article on your site usually look for other articles on the same topic. Categories and tags are a way of showing them related articles. Elegant displays the count of articles that you have written in a category or tag in a non-intrusive\u00a0manner. \nEvery category and tag has the count of articles in superscript. So if you have written three articles in the C++ category or tag, it will have 3 in the superscript. This way visitor will know you have written other articles too on the same\u00a0topic.\nCheck out the\u00a0screenshots,\n\n\nCustom 404 Page\u00b6\nElegant has a custom Error 404 page for your\u00a0readers.\n\nPage Title\u00b6\nElegant follows following format for the <title> tag\nArticle title \u00b7 Site Name\n\n\nSome sites put site title first and article title later in the <title> tag. There is a problem with this approach.  When you open too many tabs, browser delimits tab\u2019s title from the end. In such cases, only the first few words or even letters of the <title> are left\u00a0visible. \nIf visitor has opened several tabs from your website, all tabs will have \u201cSite Name\u2026\u201d title. User will need to click on each tab to identify his required tab from the content. But with Elegant\u2019s approach article title will always be visible, and reader will have less difficultly in identifying the tab he is\u00a0after. \nPutting site title before the article title increases your site name visibility. Elegant achieves this by putting site name in the top navigation bar of every page, where it always stays above the\u00a0fold. \nNext and Previous Articles\u00b6\nOne way to keep the visitor engaged is to show links to articles published before and after the article visitor is currently reading. Elegant shows newer article on the right hand side and older article on the left hand side at the bottom of every\u00a0article. \nMost of the content on web is written in left to right languages. In these languages pages are placed from left to right. It seemed natural to use the same order in\u00a0Elegant. \n\nElegant does not require any plugin to show this\u00a0list.\nCode Style\u00b6\nElegant uses Solarized theme for syntax highlighting. Line numbers have a different background color so that they appear distinct from the code. Here is an\u00a0example\n1\n2\n3\n4int sample_function (void) {\n    printf (\"This is a sample function\");\n    return 0\n}\n\n\nDisqus Thread ID\u00b6\nMost Pelican themes pass article URL to Disqus as the Disqus identifier. This puts you at a disadvantage. If you are forced to change URL of an article you will lose Disqus discussion for that article because Disqus identifier for the article will change\u00a0too.\nElegant offers you disqus_identifier property that you can set in your article meta data. Set it to any unique string you want. It won\u2019t be effected by the article\u00a0URL.\nIf you choose not to use disqus_identifier, Elegant defaults to article URL and passes it on to\u00a0Disqus.\nAdd License to your Site\u00b6\nYou can put your license string in SITE_LICENSE. It will appear in the footer of every page of your site. Here is how license of my site looks\u00a0like,\n\nTable of Content\u00b6\nThe idea behind Elegant\u2019s design is to make reading a clean and distraction free experience. Table of contents is important but it is not part of the article content. Therefore, Elegant pushes out table of content to the left of the article\u2019s main content. Its font size is relatively smaller. This way, table of content stays visible for navigation but reader\u2019s attention to the article stays\u00a0unaffected.\nTo utilise this feature, you need to use extract_toc plugin. Elegant encloses the table of content in <nav> tag for\u00a0semantics.\nArticle Subtitle\u00b6\nPelican lets you define title of your article in the meta data. Elegant adds subtitle support. Just define subtitle in your article\u2019s meta data and it will appear along with your title. Here is an\u00a0example,\n\nArticle subtitle is displayed with the title in every list. To keep it visibly separate from title, subtitle is enclosed in <small> tag. When visible cue cannot be used, like in the title attribute of html anchor tag <a>, a hyphen is inserted between\u00a0them.\n\nSite Subtitle\u00b6\nYou can also define SITESUBTITLE, it appears in the footer, before site\u00a0license.\n\nFavicon and Speed Dial icon\u00b6\nEvery decent site has favicon, Apple launcher icons and Opera speed dial icon. Elegant supports all of\u00a0them.\nPlace your images in content/theme/images directory, and define STATIC_PATHS variable in your\u00a0configuration\nSTATIC_PATHS = ['theme/images', 'images']\n\nYour images should have follow these naming\u00a0schemes\n\napple-touch-icon-114x114.png \napple-touch-icon-144x144.png\napple-touch-icon-57x57.png\napple-touch-icon-72x72.png\napple-touch-icon.png\nfavicon.ico\n\nI recommend using Iconifier.net to generate the set of\u00a0images. \nModified Date\u00b6\nYou will need to update your articles time and again. You can show the date article was last updated by defining modified in your article meta\u00a0data. \nThis is how it is displayed in the side\u00a0bar,\n\nValue of modified is treated as string, thus you can insert raw HTML in it. For example, modified meta data for this article\u00a0is\nmodified: <a href=\"https://github.com/talha131/onCrashReboot/commits/master/content/Projects/elegant-theme.md\" title=\"Revision History\">Aug 29, 2013</a>\n\nClicking on \u201cAug 29, 2013\u201d will take reader to the Git repository which will show him revision history of the\u00a0article.\nEfficient use of Meta Tags\u00b6\nElegant puts tags and category of your article in keywords tag <meta name=\"keywords\". You can set keywords property in an article to define your own keywords that should be included\u00a0there.\nYour SITE_DESCRIPTION and article summary is used to define description tag <meta name=\"description\".\nYour AUTHOR name is used in copyright tag <meta name=\"copyright\". \nWeb Safe Fonts\u00b6\nElegant uses commonly available typefaces in every style rule. It has a list of closely matching fonts in the fallback list. For examples Baskerville is the first choice for headings. But if reader does not have Baskerville installed, Garamond will be used. If that too fails then Georgia will be\u00a0used.\n\nElegant - Technical Nitty-Gritty\u00b6\nConfiguration Variables\u00b6\nHere are the variables that you should set in your configuration to get the most out of\u00a0Elegant\nPLUGINS = ['sitemap', 'extract_toc', 'tipue_search']\nMD_EXTENSIONS = ['codehilite(css_class=highlight)', 'extra', 'headerid', 'toc']\nDIRECT_TEMPLATES = (('index', 'tags', 'categories','archives', 'search', '404'))\nSTATIC_PATHS = ['theme/images', 'images']\nTAG_SAVE_AS = ''\nCATEGORY_SAVE_AS = ''\nAUTHOR_SAVE_AS = ''\n\nThese are the optional configuration variables that you can\u00a0define\nRECENT_ARTICLES_COUNT (integer)  \nCOMMENTS_INTRO ('string')\nSITE_LICENSE ('string')\nSITE_DESCRIPTION ('string')\nEMAIL_SUBSCRIPTION_LABEL ('string')\nEMAIL_FIELD_PLACEHOLDER ('string')\nSUBSCRIBE_BUTTON_TITLE ('string')\nMAILCHIMP_FORM_ACTION ('string')\nSITESUBTITLE ('string')\nLANDING_PAGE_ABOUT ({})\nPROJECTS ([{},...])\n\nThese are the optional article meta data variables that you can\u00a0use\nsubtitle\nsummary\ndisqus_identifier\nmodified\nkeywords\n\nBlog onCrash=Reboot(); uses Elegant theme. You can see its configuration files at Github for\u00a0inspiration.\nLicense\u00b6\nThe license requires that you give credit to me, Talha Mansoor, as the author of the Elegant theme on every site that uses this theme. I have placed the attribution in the footer of every page. Do not remove it. If you need to remove or change the style of the attribution, please get in touch with me\u00a0first. \nAlong with this attribution clause, Elegant theme is licensed under The MIT\u00a0License.\nIf you use my theme, I would love to hear from you. Get in touch and let me know about it. I may link to your site\u00a0too.\nContribute\u00b6\nFront end design is not my strong suite. I must have made some blunders in this design unknowingly. Please don\u2019t let me go away with buggy\u00a0code.   \n\nFile bugs at Github issues.  \nShare your ideas about the design in the comments\u00a0below.  \nAnd most of all contribute improvements to this project.\n\nThere are two problem areas that I can think\u00a0of,\n\nInternet Explorer\u00a0support\nWeb safe fonts. I developed this theme on a MacBook Retina. Although I have tried to make sure it looks great on all platforms but it still needs\u00a0polish\n\nBesides these, there must be other bugs that I haven\u2019t noticed yet. I need your help to hunt them down and make them\u00a0behave.", 
            "tags": "Elegant - Pelican Theme", 
            "loc": "http://oncrashreboot.com/elegant-best-pelican-theme-features", 
            "title": "Elegant"
        }, 
        {
            "text": "Mac App Store is accessed using macappstore URL scheme. Your URL should follow this\u00a0pattern:\nmacappstore://itunes.apple.com/app/id[APP_ID]?mt=12\n\nReplace [APP_ID] with your app\u2019s track\u00a0id.\nHow to find Track ID of any app\u00b6\nYou can easily get track ID from URL of the application at App Store. For example, URL of Mac App Store page for Jump Desktop\u00a0is \nhttps://itunes.apple.com/ca/app/jump-desktop-remote-desktop/id524141863?mt=12\n\nNumber between id and ? is the required ID which in this case is 524141863.\nLets test it. Replace [APP_ID] with 524141863 in the macappstore:// URL given above. Then open the URL from\u00a0Terminal\nopen macappstore://itunes.apple.com/app/id524141863?mt=12\n\nThis should open Mac App Store desktop application to Jump Desktop\u00a0page.\nHow to open Mac App Store from inside your Application\u00b6\nNow that we know the required URL scheme and track ID, opening iTunes page in Mac App Store is pretty simple. See the following code\u00a0snippet.\n1\n2\n3\n4\n5\n6\n7\n8NSString *track_id = @\"524141863\";\nNSString *app_url_str = [NSString stringWithFormat:\n    @\"macappstore://itunes.apple.com/app/id%@?mt=12\",\n    track_id];\n// Create NSURL to pass it to NSWorkspace\nNSURL *app_url = [NSURL URLWithString:app_url_str];\n// Open URL\n[[NSWorkspace sharedWorkspace] openURL:app_url];\n\n\nYou just need to the pass openURL: message with correctly formed URL to [NSWorkspace sharedWorkspace] object.", 
            "tags": "OSX Software Development", 
            "loc": "http://oncrashreboot.com/how-to-open-mac-app-store-programmatically", 
            "title": "How to open Mac App Store&nbsp;Programmatically"
        }
    ]
}